#!/bin/bash

# Go to this directory
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
MARKER='\033[1m[NOTROOT]\033[0m'
cd $DIR

# Check for installed packages file
INSTALLED_FILE="$DIR/installed.ntf"

which apt-get 2> /dev/null >&2
if [ $? -eq 0 ]; then
    MODE="apt"
else
    which yum 2> /dev/null >&2
    if [ $? -eq 0 ]; then
        MODE="yum"
    else
        echo -e "$MARKER I can't found apt or yum"
        exit 1
    fi
fi

if [ $# -lt 2 ]; then
    echo "Usage: "
    echo "  notroot [search|install] package"
    echo ""
    echo "  search package:"
    echo "    Display the search result for a package"
    echo ""
    echo "  install packages:"
    echo "    Installs a given package"
    echo ""
    echo "Note: don't forget to source notroot/bashrc"
    exit 1
fi

case $1 in
    search)
        if [ "$MODE" = "apt" ]; then
            apt-cache search $2
        fi
        if [ "$MODE" = "yum" ]; then
            yum search $2
        fi
        ;;
    install)
        shift
        for package in $*; do
            echo -e "$MARKER Installing $package from $MODE..."
            if [ "$MODE" = "apt" ]; then
                rm -rf deb
                mkdir deb &&
                cd deb &&

                declare -A installed_packages
                if [ -f "$INSTALLED_FILE" ]; then
                    while IFS= read -r line; do
                        installed_packages["$line"]=1
                    done < "$INSTALLED_FILE"
                fi

                declare -a to_install
                to_install+=("$package")

                while [ ${#to_install[@]} -gt 0 ]; do
                    current_package="${to_install[0]}"
                    unset to_install[0]

                    if [[ -v "installed_packages[$current_package]" ]]; then
                        echo -e "$MARKER $current_package is already installed, skipping."
                        continue
                    fi

                    echo -e "$MARKER Checking dependencies for $current_package..."
                    apt-cache rdepends "$current_package" | grep -v "Reverse Depends:" | grep -v "^ " | while read dep; do
                        if [[ ! -v "installed_packages[$dep]" ]]; then
                            to_install+=("$dep")
                        fi
                    done

                    dpkg -l "$current_package" > /dev/null 2>&1
                    if [ $? -eq 1 ]; then
                        echo -e "$MARKER $current_package is not present on the system, downloading."
                        apt-get download "$current_package"
                    fi
                done

                cd .. &&
                for deb in deb/*.deb; do
                    dpkg -x "$deb" .
                    package_name=$(dpkg -I "$deb" | grep Package: | awk '{print $2}')
                    echo "$package_name" >> "$INSTALLED_FILE" # Record installed package
                done

            fi
            if [ "$MODE" = "yum" ]; then
                rm -rf rpm
                mkdir rpm &&
                cd rpm &&
                yumdownloader "$package" &&
                cd .. &&
                rpm2cpio rpm/*.rpm | cpio -idmvu
            fi
        done
        ;;
    *)
        echo -e "$MARKER Unknown instruction $1"
        ;;
esac
